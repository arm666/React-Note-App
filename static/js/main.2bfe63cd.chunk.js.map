{"version":3,"sources":["notes.js","App.js","serviceWorker.js","index.js"],"names":["Notes","note","colorL","index","div","key","className","style","background","length","layout","transition","layoutX","duration","layoutY","delay","initial","y","opacity","animate","title","desc","App","props","handlerNote","state","setState","notes","Grid","container","justify","item","sm","Paper","padding","margin","borderRadius","fontSize","fontWeight","TextField","width","id","label","type","variant","value","this","onChange","e","target","multiline","rows","Button","color","onClick","display","gridTemplateColumns","gridGap","border","boxShadow","map","notesL","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2bfe63cd.chunk.js","sourcesContent":["import React from 'react'\r\nimport { motion } from \"framer-motion\"\r\n\r\nfunction Notes({ note, colorL, index }) {\r\n\r\n    return (\r\n        <div>\r\n            <motion.div key={index + index} className='notes' style={{ background: colorL[index % colorL.length] }}\r\n                layout\r\n                transition={{\r\n                    layoutX: { duration: 0.3 },\r\n                    layoutY: { delay: 0.2, duration: 0.3 },\r\n                }}\r\n                initial={{ y: '-50px', opacity: 0 }}\r\n                animate={{ y: '0px', opacity: 1 }}\r\n            >\r\n                <motion.div\r\n                    className='notes-inner'\r\n                    layout\r\n                    transition={{ duration: 1 }}\r\n                    initial={{ y: '-50px', opacity: 0 }}\r\n                    animate={{ y: '0px', opacity: 1 }}\r\n                >\r\n                    <div className='title'>{note.title}</div>\r\n                    <div className='desc'>{note.desc}</div>\r\n                </motion.div>\r\n            </motion.div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notes\r\n","import React, { Component } from 'react';\r\nimport { motion } from \"framer-motion\"\r\nimport './App.css';\r\nimport { Grid, Paper, TextField, Button } from '@material-ui/core'\r\nimport Notes from './notes'\r\nimport $ from 'jquery'\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      notes: [{ title: 'Notes Web', desc: 'Using React, motion-framer' }],\r\n      colorL: ['rgb(213, 254, 255)', 'rgb(255, 213, 255)', 'rgb(255, 251, 213)', 'rgb(255, 213, 213)', 'rgb(215, 200, 215)'],\r\n      title: '',\r\n      desc: ''\r\n    }\r\n  }\r\n\r\n  handlerNote = () => {\r\n    if (this.state.title.length >= 1 && this.state.desc.length >= 1) {\r\n      this.setState({\r\n        notes: [{ title: this.state.title, desc: this.state.desc }, ...this.state.notes],\r\n        title: '',\r\n        desc: '',\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Grid container justify=\"center\">\r\n          <Grid item sm={8}>\r\n            <Paper style={{ padding: '20px', margin: '20px', borderRadius: '20px', background: 'rgb(240, 240, 240 )' }}>\r\n              <header style={{ margin: '10px', fontSize: '30px', fontWeight: 'bold' }}>Notes</header>\r\n              <TextField\r\n                style={{ margin: '10px', width: '55%' }}\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                value={this.state.title}\r\n                onChange={(e) => this.setState({ title: e.target.value })}\r\n              />\r\n              <br />\r\n              <TextField\r\n                style={{ margin: '10px', width: '55%' }}\r\n                id=\"desc\"\r\n                label=\"Descripition\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                value={this.state.desc}\r\n                onChange={(e) => this.setState({ desc: e.target.value })}\r\n              />\r\n              <br />\r\n              <Button variant=\"contained\" color=\"primary\" onClick={this.handlerNote}>\r\n                Add Note\r\n              </Button>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid container item sm={10}>\r\n            <Grid item sm={6}>\r\n              <Paper style={{ padding: '20px', margin: '20px', display: 'grid', gridTemplateColumns: '1fr', gridGap: '10px', borderRadius: '20px', background: '#333', border: '0px solid ', boxShadow: '0 0 0 0 black' }}>\r\n                {this.state.notes && this.state.notes.map((note, index) => index % 2 === 0 && <motion.div key={index + 'e'} >\r\n                  <Notes note={note} colorL={this.state.colorL} index={index}></Notes>\r\n                </motion.div>\r\n                )}\r\n\r\n                {this.state.notesL}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              <Paper style={{ padding: '20px', margin: '20px', display: 'grid', gridTemplateColumns: '1fr', gridGap: '10px', borderRadius: '20px', background: '#333', border: '0px solid ', boxShadow: '0 0 0 0 black' }}>\r\n                {this.state.notes.map((note, index) => index % 2 === 1 && <Notes key={index + 'o'} className='   ' note={note} colorL={this.state.colorL} index={index} />\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}